Developing Data Products
========================================================
css: custom.css
font-import: http://fonts.googleapis.com/css?family=Raleway
font-family: 'Raleway'

#### Shiny Application and Reproducible Pitch

## Exploratory Linear Modelling<br/>on the **mtcars** Dataset


Application Background
========================================================

This application examines the relationship between two variables from the ‘mtcars’ dataset:

*The data was extracted from the 1974 Motor Trend US magazine, and comprises fuel consumption and 10 aspects of automobile design and performance for 32 automobiles (1973–74 models).*

<div align="center">
<img src="Application.png" width=415px height=300px>
</div>

The application is accessable at: (https://pogh.shinyapps.io/Assignment)

Selecting Variables
========================================================
On the left hand side you can set the two variables you would like to compare:

<div align="center">
<img src="SelectVariables.png" width=280px height=200px>
</div>

You can also change the size of the points and text on the plot.

By changing any of the variables, the scatter plot will be updated automatically.

There’s also a list of the variables and their meanings under the variable selector.

Scatterplot Result
========================================================

This is what the scatter plot looks like.  The two variables are listed along the axes and a linear trend line is added to the plot.

```{r, echo=FALSE}
library(ggplot2)

colNamesDropdown1 <- 'mpg'
colNamesDropdown2 <- 'wt'
size = 5

ggplot(mtcars, aes_string(colNamesDropdown1, colNamesDropdown2))  + 
    geom_point(aes(colour = rownames(mtcars)), size = size) + 
    guides(colour = FALSE) + 
    geom_text(aes(label = rownames(mtcars)), hjust = -size / 50, vjust = -size / 50, size = size / 2) +
    stat_smooth(method = "lm", se = FALSE)
```

Linear Modelling
========================================================

```{r}
lmModel <- lm(mpg~wt, mtcars)
summary(lmModel)
```
***
If you would like to see the details of the linear trend line, you can click the button **Show Linear Model Detail** to reveal (or update) details of the linear relationship.  It shows the detailed results and a residual plot.  
```{r, echo=FALSE}
plot(lmModel, which = 1)
```

